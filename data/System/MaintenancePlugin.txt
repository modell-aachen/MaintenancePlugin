%META:TOPICPARENT{name="Plugins"}%
---+ MaintenancePlugin

Q.wiki maintenance plugin.

---++ MP_LIST

Lists registered checks.

%MP_LIST%

---++ MP_CHECK

If user is admin user and mpcheck=1, check for maintenance problems and list them as a table. %BUTTON{"Check now!" href="%SCRIPTURLPATH{"view"}%/%WEB%.%TOPIC%?mpcheck=1"}%

%ADDTOZONE{"script" id="MaintenancePlugin::check" requires="JQUERYPLUGIN" text="<script type='text/javascript' src='%PUBURLPATH%/%SYSTEMWEB%/MaintenancePlugin/check.js'></script>"}%
%MP_CHECK%

---++  Restrictions / Known Bugs

   * The file permission check is experimental. If it runs into files containing characters not in the locale-defined \w, such as german umlauts, the resulting search with File::Find will taint the result, which will cause the check to fail. Since we can not really change File::Grep's unicode settings, we suggest moving using the rename functionality to rename the page and change all incoming links. Will be automated soonish. Sorry.%BR%%BUTTON{"Check excluding experimental checks" href="%SCRIPTURLPATH{"view"}%/%WEB%.%TOPIC%?mpcheck=safe"}%

---++ API version 8

---+++ maintenanceHandler (experimental)

The MaintenancePlugin looks for a sub =maintenanceHandler= in the namespace of modules meeting one of the following conditions:
   * A module in lib/Foswiki/Plugin that is correctly installed (Module key is in LocalSite.cfg) and ={Enabled}=.
   * Module in lib/Foswiki/Contrib that resides in a file matching /Contrib\.pm/.

If available, the sub =maintenanceHandler= will be executed without parameters. This is the recommended place to use the registerCheck API. Use reponsibly.
It is unnecessary to require =Foswiki::Plugins::MaintenancePlugin=in your plugin, unless you actually require it. MaintenancePlugin guarantees that it is fully initialized before the =maintenanceHandler= is run.

---+++ registerCheck( $name, $newcheck )
You can use the registerCheck API to add your own checks to the MaintenancePlugin.
   * =$name= the technical name of the check. Can overwrite existing checks.
   * =$newcheck= a reference to a hash containing:
      * =name= - Common name of a the checked item
      * =description= - Description of the detected problem
      * =check= - a reference to a perl subroutine, which must return a hash reference structured as follows
         * =result= - =0= if no error is found, =1= if no error is found.
         * =priority= - mandatory if =result= is not =0=. Defines the severity of the found error.
            * =$Foswiki::Plugins::MaintenancePlugin::CRITICAL= - Issue needs to be fixed now, or will possibly prevent wiki from functioning correctly.
            * =$Foswiki::Plugins::MaintenancePlugin::ERROR= - Issue should be fixed, or might prevent components from working.
            * =$Foswiki::Plugins::MaintenancePlugin::WARN= - Issue might affect certain components in a negative way.
         * =solution= - mandatory if =result= is not =0=. Text containing information on how to solve the problem.
      * =experimental= - , optional.

*Example*

<verbatim>
# MaintenancePlugin integration
sub maintenanceHandler {
    Foswiki::Plugins::MaintenancePlugin::registerCheck("general:replaceifeditedagainwithin", {
        name => "ReplaceIfEditedAgainWithin set correctly",
        description => "{ReplaceIfEditedAgainWithin} set to 0",
        check => sub {
            my $result = { result => 0 };
            if (( exists $Foswiki::cfg{ReplaceIfEditedAgainWithin}) and ($Foswiki::cfg{ReplaceIfEditedAgainWithin} != 0)) {
                $result->{result} = 1;
                $result->{priority} = $Foswiki::Plugins::MaintenancePlugin::WARN;
                $result->{solution} = "Set {ReplaceIfEditedAgainWithin} to 0.";
            }
            return $result;
       }
    });
}
</verbatim>

---+++ registerFileCheck( my ( $name, $file, $correctresource, $goodversions, $badversions )
You can use the registerFileCheck API to add your own file checksum checks to the MaintenancePlugin.
If the file checksum matches is in =$goodversions=, everything is fine. If it is in =$badversions=, a prompt for updating will be displayed. If the file is neither in =$goodversions= nor in =$badversions=, a prompt for review will be displayed.

   * =$name= the technical name of the check. Can overwrite existing checks.
   * =$file= a valid path to the file to be checked. This file will be opened, and its checksum will be calculated.
   * =correctresource= - An informal locator for a correct resource. Will be displayed to the user.
   * =goodversions= - A hash containing known good version checksums of the file. These are the only files resulting in no warning displayed.
   * =badversions= - A hash containing known bad version checksums of the file.

*Example*

<verbatim>
# MaintenancePlugin integration
sub maintenanceHandler {
    Foswiki::Plugins::MaintenancePlugin::registerFileCheck(
        "SolrPlugin:config:ram",
        File::Spec->catfile('/', 'var', 'solr', 'solr.in.sh'),
        'resources/SolrPlugin/solr.in.sh',
        {"d8aef1acc0e56aaca29de623e1566d7116530929e5434cda8ec927e40dfede38" => 1},
        {"f6efb9745ee0293119f45550ac40d30d2ee769ddef9fb7609d75c5754a341457" => 1},
    );
}
</verbatim>

---++ Plugin Info

|  Author: | Maik Glatki |
|  Copyright: | &copy; 2015-2016, Maik Glatki <glatki@modell-aachen.de>, Modell Aachen GmbH |
|  License: | GPL ([[http://www.gnu.org/copyleft/gpl.html][GNU General Public License]]) |
|  Release: | %$RELEASE% |
|  Version: | %$VERSION% |
|  Change History: | <!-- versions in reverse order --> |
|  0.8 | Add new registerFileCheck API. Changed API version to 8. |
|  0.7 | Error classes are now exported. Changed API version to 7. |
|  0.6 | Deprecated experimental Maintenance.pm inclusion. Use newly introduced maintenanceHandler instead. Changed API version to 6. |
|  0.5 | Improved Maintenance.pm inclusion. Changed API version to 5. |
|  0.4 | Added experimental Maintenance.pm inclusion. Changed API version to 4.%BR%Removed distinctivly useless check for templates in Custom web.%BR% Improved documentation. |
|  0.3 | Added optional experimental tag to checks. Changed API version to 3. |
|  CPAN Dependencies | None |
|  Home | http://www.modell-aachen.de |
|  Feedback | support(at)modell-aachen(dot)de |

<div id="maintenancePlugininvisible" style="display: none;">
   * Set NOAUTOLINK = on
</div>
